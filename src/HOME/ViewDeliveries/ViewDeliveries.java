/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package HOME.ViewDeliveries;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

import HOME.SessionManager;
import HOME.Home;
import HOME.LoadObjects;

/**
 *
 * @author donor
 */
public class ViewDeliveries extends javax.swing.JFrame {

    /**
     * Creates new form ViewDeliveries
     */
    public ViewDeliveries() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ViewDeliveries = new javax.swing.JTable();
        DisplayDeliveries = new javax.swing.JButton();
        btnDisplayCancelDeliveries = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        CancelDelivery = new javax.swing.JButton();
        strEnterTruckID = new javax.swing.JLabel();
        edtCancelTruckID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ViewDeliveries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TruckID", "Package", "Status", "Quantity", "Delivery Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ViewDeliveries);
        if (ViewDeliveries.getColumnModel().getColumnCount() > 0) {
            ViewDeliveries.getColumnModel().getColumn(0).setResizable(false);
            ViewDeliveries.getColumnModel().getColumn(1).setResizable(false);
            ViewDeliveries.getColumnModel().getColumn(2).setResizable(false);
            ViewDeliveries.getColumnModel().getColumn(3).setResizable(false);
            ViewDeliveries.getColumnModel().getColumn(4).setResizable(false);
        }

        DisplayDeliveries.setText("View Delivery Status");
        DisplayDeliveries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayDeliveriesActionPerformed(evt);
            }
        });

        btnDisplayCancelDeliveries.setText("Cancelled Deliveries");
        btnDisplayCancelDeliveries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayCancelDeliveriesActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        CancelDelivery.setText("Cancel Delivery");
        CancelDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelDeliveryActionPerformed(evt);
            }
        });

        strEnterTruckID.setText("Enter Truck ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(DisplayDeliveries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDisplayCancelDeliveries, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CancelDelivery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(strEnterTruckID)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edtCancelTruckID)))
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(DisplayDeliveries)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDisplayCancelDeliveries)
                        .addGap(91, 91, 91)
                        .addComponent(CancelDelivery)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(strEnterTruckID)
                            .addComponent(edtCancelTruckID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String url = "jdbc:mysql://localhost:3306/myproject";
    String user = "root";
    String pass = "";
    
    
    private void DisplayDeliveriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayDeliveriesActionPerformed
        DefaultTableModel model = (DefaultTableModel)ViewDeliveries.getModel();
        
        model.setRowCount(0);
        
        int UserID = SessionManager.getInstance().getUserID();
        
        try{
            Connection conn = DriverManager.getConnection(url, user, pass);
            String sql = "SELECT DISTINCT \n" +
                         "    Package.Packagename, \n" +
                         "    Package.Quantity, \n" +
                         "    Deliveries.Status, \n" +
                         "    Deliveries.DropOffAddress, \n" +
                         "    Trucks.TruckID \n" +
                         "FROM Package\n" +
                         "INNER JOIN Deliveries ON Package.UserID = Deliveries.UserID\n" +
                         "INNER JOIN Trucks ON Deliveries.TruckID = Trucks.TruckID\n" +
                         "WHERE Package.UserID = ? \n" +
                         "AND Deliveries.Status = 'Out for Delivery';";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            pstmt.setInt(1, UserID);
            ResultSet rs = pstmt.executeQuery();
            
            while(rs.next()){
                String PackageName = rs.getString("PackageName");
                int Quantity = rs.getInt("Quantity");
                String Status = rs.getString("Status");
                String DeliveryAddress = rs.getString("DropOffAddress");
                int TruckID = rs.getInt("TruckID");
                
                model.addRow(new Object[]{ TruckID, PackageName, Quantity, Status, DeliveryAddress});
            }
        }catch(Exception e){
            e.printStackTrace();
        }      
    }//GEN-LAST:event_DisplayDeliveriesActionPerformed
  
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
      Home H = new Home();
      H.show();
      dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDisplayCancelDeliveriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayCancelDeliveriesActionPerformed
    DefaultTableModel model = (DefaultTableModel) ViewDeliveries.getModel();
    model.setRowCount(0);

    int UserID = SessionManager.getInstance().getUserID();
    
    try {

        Connection conn = DriverManager.getConnection(url, user, pass);
        
        String sql = "SELECT DISTINCT \n" +
                     "    Package.Packagename, \n" +
                     "    Package.Quantity, \n" +
                     "    Deliveries.Status, \n" +
                     "    Deliveries.DropOffAddress, \n" +
                     "    Trucks.TruckID \n" +
                     "FROM Package\n" +
                     "INNER JOIN Deliveries ON Package.UserID = Deliveries.UserID\n" +
                     "INNER JOIN Trucks ON Deliveries.TruckID = Trucks.TruckID\n" +
                     "WHERE Package.UserID = ? \n" +
                     "AND Deliveries.Status = 'Cancelled';";

        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setInt(1, UserID);
        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            String PackageName = rs.getString("Packagename");
            int Quantity = rs.getInt("Quantity");
            String Status = rs.getString("Status");
            String DeliveryAddress = rs.getString("DropOffAddress");
            int TruckID = rs.getInt("TruckID");
            

            model.addRow(new Object[]{ TruckID, PackageName, Quantity, Status, DeliveryAddress});
        }
        
    } catch (Exception e) {

        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error retrieving cancelled deliveries: " + e.getMessage());
    }
    }//GEN-LAST:event_btnDisplayCancelDeliveriesActionPerformed
    
    
    private void CancelDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelDeliveryActionPerformed
        String TruckIDText = edtCancelTruckID.getText().trim();
        
        if(TruckIDText.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all the text fields");
            return;
        }
        
        int TruckID = Integer.parseInt(TruckIDText);
        int UserID = SessionManager.getInstance().getUserID();
        
        try{
        Connection conn = DriverManager.getConnection(url, user, pass);
        String checkStatusQuery = "SELECT Status FROM Deliveries WHERE TruckID = ? AND UserID = ?";
        PreparedStatement checkStmt = conn.prepareStatement(checkStatusQuery);
        checkStmt.setInt(1, TruckID);
        checkStmt.setInt(2, UserID);
        
        ResultSet rs = checkStmt.executeQuery();

        }catch(Exception e){
                e.printStackTrace();
        }
        
        System.out.print(UserID + "  " + TruckID);
        //UPDATE DELIVERIES TABLE
        try{
            Connection conn = DriverManager.getConnection(url, user, pass);
            String CancelStmt = "UPDATE Deliveries \n" +
                                "SET Status = 'Cancelled' \n" +
                                "WHERE TruckID = ? \n" +
                                "  AND UserID = ? \n" +
                                "  AND Status = 'Out for Delivery';";
            PreparedStatement pstmt = conn.prepareStatement(CancelStmt);
            pstmt.setInt(1, TruckID);
            pstmt.setInt(2, UserID);
            int rowsAffected = pstmt.executeUpdate();
            
            if(rowsAffected > 0){
                JOptionPane.showMessageDialog(null, "Cancelled Successfully!");
                edtCancelTruckID.setText("");
            }else{
                JOptionPane.showMessageDialog(null, "Truck Not Found");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
            int lTruckID = SessionManager.getInstance().getTruckID();
            LoadObjects LO = new LoadObjects();
            LO.UpdateTruckStatus("Available", lTruckID);
        
    }//GEN-LAST:event_CancelDeliveryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewDeliveries.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewDeliveries().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelDelivery;
    private javax.swing.JButton DisplayDeliveries;
    private javax.swing.JTable ViewDeliveries;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDisplayCancelDeliveries;
    private javax.swing.JTextField edtCancelTruckID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel strEnterTruckID;
    // End of variables declaration//GEN-END:variables
}
